services:
    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        restart: always
        ports:
            - "9999:9000" # Web interface
            - "8000:8000" # (Optional) Edge agent
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock # Docker host control
            - ${DISK_PATH}/Docker/portainer:/data
        mem_limit: 512m
        cpus: 0.5

    pihole:
        container_name: pihole
        image: pihole/pihole:2025.08.0
        platform: linux/arm64
        restart: unless-stopped
        network_mode: host # Use host network mode, no additional configuration needed in ports
        environment:
            TZ: ${TZ}
            FTLCONF_webserver_api_password: "${PIHOLE_PWD}" # Password para la web UI
            FTLCONF_dns_listeningMode: all
            FTLCONF_webserver_port: "7777"
            FTLCONF_dns_domain: "redacted"
            FTLCONF_dns_bogusPriv: "true"
            FTLCONF_dns_reply_host_IPv4: ${PIHOLE_IP}
            FTLCONF_dns_reply_host_force4: "true"
        volumes:
            - ${DISK_PATH}/Docker/pihole/etc-pihole:/etc/pihole
            - ${DISK_PATH}/Docker/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
        cap_add:
            - NET_ADMIN
            - SYS_TIME
            - SYS_NICE
        mem_limit: 512m
        cpus: 0.5
    tailscale:
        image: tailscale/tailscale:latest
        container_name: tailscale
        restart: unless-stopped
        network_mode: host # necesary to expose local services
        privileged: true # necessary to manipulate the network
        volumes:
            - ${DISK_PATH}/Docker/tailscale:/var/lib/tailscale
        devices:
            - /dev/net/tun:/dev/net/tun
        command: sh -c "
            tailscaled &
            sleep 5 &&
            tailscale up \
            --authkey=${TS_AUTHKEY} \
            --advertise-routes=192.168.1.0/24 \
            --advertise-exit-node \
            --hostname=homelab-docker"
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        mem_limit: 256m
        cpus: 0.25

    watchtower:
        image: containrrr/watchtower:latest
        container_name: watchtower
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - WATCHTOWER_CLEANUP=true # delete old images
            - WATCHTOWER_POLL_INTERVAL=3600 # update interval in seconds
        mem_limit: 128m
        cpus: 0.25

    cloudflared:
        image: cloudflare/cloudflared:2025.8.1
        platform: linux/arm64 # for ARM64 architecture
        container_name: cloudflared
        restart: unless-stopped
        command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
        environment:
            - TUNNEL_TOKEN=${CLOUDFLARED_TOKEN}
        networks:
            - default
        mem_limit: 256m
        cpus: 0.25

    homeassistant:
        container_name: homeassistant
        image: homeassistant/home-assistant:2025.7
        restart: unless-stopped
        volumes:
            - ${DISK_PATH}/Docker/homeassistant:/config
        environment:
            - TZ=${TZ}
        ports:
            - "8123:8123"
        privileged: true
        mem_limit: 1536m
        cpus: 1.5

    sftpgo:
        image: drakkan/sftpgo:v2.6.6
        container_name: sftpgo
        restart: unless-stopped
        ports:
            - "6666:2022" #  SFTP port
            - "9998:8080" #  Web UI port
        volumes:
            - ${DISK_PATH}/Docker/sftpgo:/var/lib/sftpgo
            - ${DISK_PATH}/Docker/sftpgo/backups:/srv/sftpgo/backups
            - ${DISK_PATH}:/srv/sftpgo/data/${FTP_USER}
        environment:
            - SFTPGO_USER=${FTP_USER}
            - SFTPGO_PASSWORD=${FTP_PASSWORD}
        networks:
            - default
        mem_limit: 512m
        cpus: 0.5

    homebridge:
        image: homebridge/homebridge:latest
        restart: always
        network_mode: host
        volumes:
            - ${DISK_PATH}/Docker/homebridge:/homebridge
        environment:
            - TZ=${TZ}
        logging:
            driver: json-file
            options:
                max-size: "10mb"
                max-file: "1"
        mem_limit: 1024m
        cpus: 1.0
